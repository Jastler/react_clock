{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","tick","console","log","toLocaleTimeString","prevProps","clockName","props","clearInterval","setState","React","Component","App","isClockVisible","hideClock","showClock","randomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,OAGLC,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAXP,gCAcE,SAAmBC,GACbA,EAAUC,YAAcR,KAAKS,MAAMD,WAErCJ,QAAQC,IAAR,qCAA0CE,EAAUC,UAApD,eAAoER,KAAKS,MAAMD,cAjBrF,kCAqBE,WACEE,cAAcV,KAAKC,WAtBvB,kBAyBE,WACED,KAAKW,SAAS,CACZb,KAAM,IAAIC,SA3BhB,oBA+BE,WACE,OACE,8BACGC,KAAKH,MAAMC,KAAKQ,0BAlCzB,GAA2BM,IAAMC,WCEpBC,G,MAAb,4MACEjB,MAAQ,CACNkB,gBAAgB,EAChBP,UAAW,GAHf,EAMEQ,UAAY,WACV,EAAKL,SAAS,CACZI,gBAAgB,KARtB,EAYEE,UAAY,WACV,EAAKN,SAAS,CACZI,gBAAgB,KAdtB,EAkBEG,WAAa,WACX,EAAKP,SAAS,CACZH,UAAWW,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,MApBlD,4CAwBE,WACE,OACE,yBAAKC,UAAU,OACb,2CACA,2CAEG,IACAtB,KAAKH,MAAMkB,gBACV,kBAAC,EAAD,CAAOP,UAAWR,KAAKH,MAAMW,aAGjC,4BACEe,KAAK,SACLC,QAASxB,KAAKiB,WAFhB,cAMA,4BACEM,KAAK,SACLC,QAASxB,KAAKgB,WAFhB,cAMA,4BACEO,KAAK,SACLC,QAASxB,KAAKkB,YAFhB,wBA/CR,GAAyBN,IAAMC,YCD/BY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.38dbb509.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      this.tick();\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.date.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  randomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100 + 1),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && (\n            <Clock clockName={this.state.clockName} />\n          )}\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.randomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}